#!/usr/bin/env python
# CONFIG_DIR: ~/.config/pdraw/

import sys
import subprocess as sp
from os import listdir
from os.path import isfile, join, expanduser
import argparse

# this actually print the draw
def draw(index, debug=False):
    if debug == True:
        sys.stdout.write(index + ">")
        sys.stdout.flush()

    if type(index) != type(420):
        index.replace(" ", "")
    if index == "" or index == " ":
        return
    if index == "0":
        sys.stdout.write("  ")
        sys.stdout.flush()
    else:
        try:
            int(index)
        except Exception:
            pass
        cmd = 'echo -e "\\033[48;5;' + index + 'm  \\033[m\\c" '
        sp.call(cmd, shell=True)


# This method just removes the spaces and the return of every line
def analyze(line, debug=False):
    chars = line.rstrip().split(" ")
    if debug == True:
        print(chars)
        for char in chars:
            draw(char, True)
    else:
        for char in chars:
            draw(char)


p = argparse.ArgumentParser()
p.add_argument(
    "-f",
    "--file",
    metavar="<file_name>",
    required=False,
    help="file to draw, too see avaiable file use -l",
)
p.add_argument(
    "-l",
    "--list",
    action="store_true",
    required=False,
    help="list all the file in config folder",
)
p.add_argument(
    "--debug",
    default=False,
    action="store_true",
    required=False,
    help="enable debug mode",
)
args = p.parse_args()

# check if the file is in the config folder
dir = expanduser("~") + "/.config/draw/"
files = [f for f in listdir(dir) if isfile(join(dir, f))]

if len(sys.argv) < 2:
    p.print_help()
    exit(0)

if args.list:
    [print(f) for f in files]
    exit(0)

if args.file in files:
    file = open(dir + args.file, "r")
else:
    try:
        file = open(args.file, "r")
    except FileNotFoundError:
        print("FileNotFound")
        exit(-2)

# read the file and print it (line by line)
for line in file:
    analyze(line, args.debug)
    print("")
